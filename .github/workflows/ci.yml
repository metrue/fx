on: push
name: ci
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: setup Go 1.12
        uses: actions/setup-go@v1
        with:
          version: 1.12
        id: go

      - name: check out
        uses: actions/checkout@master

      - name: setup docker
        run: |
          ./scripts/provision.sh

      - name: setup k8s and kind
        run: |
          export GOBIN=$(go env GOPATH)/bin
          export PATH=$PATH:$GOBIN
          mkdir -p $GOBIN
          curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x kubectl && mv kubectl $GOBIN
          wget https://github.com/kubernetes-sigs/kind/releases/download/v0.5.0/kind-linux-amd64 && chmod +x kind-linux-amd64 && mv kind-linux-amd64 $GOBIN/kind
          ./scripts/setup_kind.sh

      - name: unit test
        run: |
          export DOCKER_USERNAME=${DOCKER_USERNAME}
          export DOCKER_PASSWORD=${DOCKER_PASSWORD}
          export KUBECONFIG=/home/runner/.kube/kind-config-fx-test
          go test -v ./image/... ./container/...

      - name: build fx
        run: |
          make build

      - name: lint
        run: |
          export GOBIN=$(go env GOPATH)/bin
          export PATH=$PATH:$GOBIN
          go get -u github.com/golangci/golangci-lint/cmd/golangci-lint
          golangci-lint run


      - name: test fx cli
        run: |
          make cli-test

      # TODO enable when GITHUB fix the localhost network access issue
      # - name: Unit Test
      #   working-directory:
      #   run: |
      #     docker ps
      #     curl http://127.0.0.1:8866/version
      #     curl http://localhost:8866/version
      #     go test -v ./...
