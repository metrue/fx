defaults: &defaults
  machine: true
    image: circleci/golang:1.10
  working_directory: /go/src/github.com/metrue/fx

attach_workspace: &attach_workspace
  attach_workspace:
    at: /go/src/github.com/metrue/fx

setup_remote_docker: &setup_remote_docker
  setup_remote_docker:
      docker_layer_caching: true

install_dep: &install_packr
  run:
    name: Install packr
    command: |
      go get -u github.com/gobuffalo/packr/packr

install_dep: &install_dep
  run:
    name: Install dep
    command: |
      go get github.com/golang/dep
      cd ${GOPATH}/src/github.com/golang/dep
      go install ./...

install_httpie: &install_httpie
  run:
    name: install httpie
    command: |
      sudo apt-get -y update && sudo apt-get -y install httpie

install_jq: &install_jq
  run:
    name: install jq
    command: |
      sudo apt-get update && sudo apt-get -y install jq

install_dependencies: &install_dependencies
  run:
    name: install dependencies
    command: make install-deps

build_binary: &build_binary
  run:
    name: build binary
    command: make build

unit_test: &unit_test
  run:
    name: unit test
    command: |
      make unit-test
      bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
cli_test: &cli_test
  run:
    name: cli test
    command: make cli-test

http_test: &http_test
  run:
    name: http test
    command: make http-test

version: 2
jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - *setup_remote_docker
      - *install_httpie
      - *install_jq
      - *install_packr
      - *install_dep
      - *install_dependencies
      - *build_binary
      - *unit_test
      - *cli_test
      - *http_test
  deploy:
    <<: *defaults
    steps:
      - checkout
      - *setup_remote_docker
      - *install_dependencies
      - run:
          name: Release
          command: make release
  release:
    <<: *defaults
    steps:
      - checkout
      - *setup_remote_docker
      - *install_dependencies
      - run:
          name: Release
          command: make release

workflows:
  version: 2
  workflow:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - /^.*--autodeploy$/
      - release:
          requires:
            - test
          filters:
            branches:
              only:
                - production
