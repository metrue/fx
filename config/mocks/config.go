// Code generated by MockGen. DO NOT EDIT.
// Source: ./config.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	config "github.com/metrue/fx/config"
)

// MockConfiger is a mock of Configer interface
type MockConfiger struct {
	ctrl     *gomock.Controller
	recorder *MockConfigerMockRecorder
}

// MockConfigerMockRecorder is the mock recorder for MockConfiger
type MockConfigerMockRecorder struct {
	mock *MockConfiger
}

// NewMockConfiger creates a new mock instance
func NewMockConfiger(ctrl *gomock.Controller) *MockConfiger {
	mock := &MockConfiger{ctrl: ctrl}
	mock.recorder = &MockConfigerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfiger) EXPECT() *MockConfigerMockRecorder {
	return m.recorder
}

// GetDefaultHost mocks base method
func (m *MockConfiger) GetDefaultHost() (config.Host, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultHost")
	ret0, _ := ret[0].(config.Host)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefaultHost indicates an expected call of GetDefaultHost
func (mr *MockConfigerMockRecorder) GetDefaultHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultHost", reflect.TypeOf((*MockConfiger)(nil).GetDefaultHost))
}
